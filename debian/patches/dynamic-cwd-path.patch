Patch that replaces fix_FTBFS4Hurd.patch
Patch by Sebastian Reichel
See Launchpad Bug 977232
https://bugs.launchpad.net/bugs/977232
Problems with fix_FTBFS4Hurd.patch:
1. It does lstat(file, &sb) before file has been filled with "/proc/<pid>/cwd",
so it does lstat on NULL
2. It should do stat() instead of lstat(), since we are interested in the size
of the path and not the size of the directory, which is 0
3. file must be free'd if lstat() fails
4. file must be free'd if size check fails

So the patch introduces 2 errors breaking the code for sure and two
potential memory leaks.
---
 src/sakura.c |   20 +++++++++++++++++---
 1 file changed, 17 insertions(+), 3 deletions(-)

Index: sakura.git/src/sakura.c
===================================================================
--- sakura.git.orig/src/sakura.c	2012-05-01 08:45:57.599805418 +0900
+++ sakura.git/src/sakura.c	2012-05-01 08:46:24.059830828 +0900
@@ -1419,18 +1419,32 @@
 	char *cwd = NULL;
 
 	if (term->pid >= 0) {
-		char *file;
-		char buf[PATH_MAX+1];
+		char *file, *buf;
+		struct stat sb;
 		int len;
 
 		file = g_strdup_printf ("/proc/%d/cwd", term->pid);
-		len = readlink (file, buf, sizeof (buf) - 1);
+
+		if (g_stat(file, &sb) == -1) {
+			g_free(file);
+			return cwd;
+		}
+
+		buf = malloc(sb.st_size + 1);
+
+		if(buf == NULL) {
+			g_free(file);
+			return cwd;
+		}
+
+		len = readlink(file, buf, sb.st_size + 1);
 
 		if (len > 0 && buf[0] == '/') {
 			buf[len] = '\0';
 			cwd = g_strdup(buf);
 		}
 
+		g_free(buf);
 		g_free(file);
 	}
 
